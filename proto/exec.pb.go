// Code generated by protoc-gen-go. DO NOT EDIT.
// source: exec.proto

/*
Package kubeProto is a generated protocol buffer package.

It is generated from these files:
	exec.proto

It has these top-level messages:
	ExecFromClient
	ExecToClient
*/
package kubeProto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ExecFromClient struct {
	// Types that are valid to be assigned to Stdin:
	//	*ExecFromClient_Data
	Stdin isExecFromClient_Stdin `protobuf_oneof:"stdin"`
	// Types that are valid to be assigned to TerminalSize:
	//	*ExecFromClient_Width
	//	*ExecFromClient_Height
	TerminalSize isExecFromClient_TerminalSize `protobuf_oneof:"terminal_size"`
}

func (m *ExecFromClient) Reset()                    { *m = ExecFromClient{} }
func (m *ExecFromClient) String() string            { return proto.CompactTextString(m) }
func (*ExecFromClient) ProtoMessage()               {}
func (*ExecFromClient) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type isExecFromClient_Stdin interface {
	isExecFromClient_Stdin()
}
type isExecFromClient_TerminalSize interface {
	isExecFromClient_TerminalSize()
}

type ExecFromClient_Data struct {
	Data []byte `protobuf:"bytes,1,opt,name=data,proto3,oneof"`
}
type ExecFromClient_Width struct {
	Width uint32 `protobuf:"varint,10,opt,name=width,oneof"`
}
type ExecFromClient_Height struct {
	Height uint32 `protobuf:"varint,11,opt,name=height,oneof"`
}

func (*ExecFromClient_Data) isExecFromClient_Stdin()          {}
func (*ExecFromClient_Width) isExecFromClient_TerminalSize()  {}
func (*ExecFromClient_Height) isExecFromClient_TerminalSize() {}

func (m *ExecFromClient) GetStdin() isExecFromClient_Stdin {
	if m != nil {
		return m.Stdin
	}
	return nil
}
func (m *ExecFromClient) GetTerminalSize() isExecFromClient_TerminalSize {
	if m != nil {
		return m.TerminalSize
	}
	return nil
}

func (m *ExecFromClient) GetData() []byte {
	if x, ok := m.GetStdin().(*ExecFromClient_Data); ok {
		return x.Data
	}
	return nil
}

func (m *ExecFromClient) GetWidth() uint32 {
	if x, ok := m.GetTerminalSize().(*ExecFromClient_Width); ok {
		return x.Width
	}
	return 0
}

func (m *ExecFromClient) GetHeight() uint32 {
	if x, ok := m.GetTerminalSize().(*ExecFromClient_Height); ok {
		return x.Height
	}
	return 0
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*ExecFromClient) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _ExecFromClient_OneofMarshaler, _ExecFromClient_OneofUnmarshaler, _ExecFromClient_OneofSizer, []interface{}{
		(*ExecFromClient_Data)(nil),
		(*ExecFromClient_Width)(nil),
		(*ExecFromClient_Height)(nil),
	}
}

func _ExecFromClient_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*ExecFromClient)
	// stdin
	switch x := m.Stdin.(type) {
	case *ExecFromClient_Data:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		b.EncodeRawBytes(x.Data)
	case nil:
	default:
		return fmt.Errorf("ExecFromClient.Stdin has unexpected type %T", x)
	}
	// terminal_size
	switch x := m.TerminalSize.(type) {
	case *ExecFromClient_Width:
		b.EncodeVarint(10<<3 | proto.WireVarint)
		b.EncodeVarint(uint64(x.Width))
	case *ExecFromClient_Height:
		b.EncodeVarint(11<<3 | proto.WireVarint)
		b.EncodeVarint(uint64(x.Height))
	case nil:
	default:
		return fmt.Errorf("ExecFromClient.TerminalSize has unexpected type %T", x)
	}
	return nil
}

func _ExecFromClient_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*ExecFromClient)
	switch tag {
	case 1: // stdin.data
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeRawBytes(true)
		m.Stdin = &ExecFromClient_Data{x}
		return true, err
	case 10: // terminal_size.width
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.TerminalSize = &ExecFromClient_Width{uint32(x)}
		return true, err
	case 11: // terminal_size.height
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.TerminalSize = &ExecFromClient_Height{uint32(x)}
		return true, err
	default:
		return false, nil
	}
}

func _ExecFromClient_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*ExecFromClient)
	// stdin
	switch x := m.Stdin.(type) {
	case *ExecFromClient_Data:
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(len(x.Data)))
		n += len(x.Data)
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// terminal_size
	switch x := m.TerminalSize.(type) {
	case *ExecFromClient_Width:
		n += proto.SizeVarint(10<<3 | proto.WireVarint)
		n += proto.SizeVarint(uint64(x.Width))
	case *ExecFromClient_Height:
		n += proto.SizeVarint(11<<3 | proto.WireVarint)
		n += proto.SizeVarint(uint64(x.Height))
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type ExecToClient struct {
	// Types that are valid to be assigned to Stdout:
	//	*ExecToClient_StdoutData
	Stdout isExecToClient_Stdout `protobuf_oneof:"stdout"`
	// Types that are valid to be assigned to Stderr:
	//	*ExecToClient_StderrData
	Stderr isExecToClient_Stderr `protobuf_oneof:"stderr"`
}

func (m *ExecToClient) Reset()                    { *m = ExecToClient{} }
func (m *ExecToClient) String() string            { return proto.CompactTextString(m) }
func (*ExecToClient) ProtoMessage()               {}
func (*ExecToClient) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type isExecToClient_Stdout interface {
	isExecToClient_Stdout()
}
type isExecToClient_Stderr interface {
	isExecToClient_Stderr()
}

type ExecToClient_StdoutData struct {
	StdoutData []byte `protobuf:"bytes,1,opt,name=stdout_data,json=stdoutData,proto3,oneof"`
}
type ExecToClient_StderrData struct {
	StderrData []byte `protobuf:"bytes,10,opt,name=stderr_data,json=stderrData,proto3,oneof"`
}

func (*ExecToClient_StdoutData) isExecToClient_Stdout() {}
func (*ExecToClient_StderrData) isExecToClient_Stderr() {}

func (m *ExecToClient) GetStdout() isExecToClient_Stdout {
	if m != nil {
		return m.Stdout
	}
	return nil
}
func (m *ExecToClient) GetStderr() isExecToClient_Stderr {
	if m != nil {
		return m.Stderr
	}
	return nil
}

func (m *ExecToClient) GetStdoutData() []byte {
	if x, ok := m.GetStdout().(*ExecToClient_StdoutData); ok {
		return x.StdoutData
	}
	return nil
}

func (m *ExecToClient) GetStderrData() []byte {
	if x, ok := m.GetStderr().(*ExecToClient_StderrData); ok {
		return x.StderrData
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*ExecToClient) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _ExecToClient_OneofMarshaler, _ExecToClient_OneofUnmarshaler, _ExecToClient_OneofSizer, []interface{}{
		(*ExecToClient_StdoutData)(nil),
		(*ExecToClient_StderrData)(nil),
	}
}

func _ExecToClient_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*ExecToClient)
	// stdout
	switch x := m.Stdout.(type) {
	case *ExecToClient_StdoutData:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		b.EncodeRawBytes(x.StdoutData)
	case nil:
	default:
		return fmt.Errorf("ExecToClient.Stdout has unexpected type %T", x)
	}
	// stderr
	switch x := m.Stderr.(type) {
	case *ExecToClient_StderrData:
		b.EncodeVarint(10<<3 | proto.WireBytes)
		b.EncodeRawBytes(x.StderrData)
	case nil:
	default:
		return fmt.Errorf("ExecToClient.Stderr has unexpected type %T", x)
	}
	return nil
}

func _ExecToClient_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*ExecToClient)
	switch tag {
	case 1: // stdout.stdout_data
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeRawBytes(true)
		m.Stdout = &ExecToClient_StdoutData{x}
		return true, err
	case 10: // stderr.stderr_data
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeRawBytes(true)
		m.Stderr = &ExecToClient_StderrData{x}
		return true, err
	default:
		return false, nil
	}
}

func _ExecToClient_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*ExecToClient)
	// stdout
	switch x := m.Stdout.(type) {
	case *ExecToClient_StdoutData:
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(len(x.StdoutData)))
		n += len(x.StdoutData)
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// stderr
	switch x := m.Stderr.(type) {
	case *ExecToClient_StderrData:
		n += proto.SizeVarint(10<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(len(x.StderrData)))
		n += len(x.StderrData)
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

func init() {
	proto.RegisterType((*ExecFromClient)(nil), "ExecFromClient")
	proto.RegisterType((*ExecToClient)(nil), "ExecToClient")
}

func init() { proto.RegisterFile("exec.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 203 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x8f, 0xbb, 0x4a, 0xc5, 0x40,
	0x10, 0x86, 0x5d, 0xf0, 0x44, 0x9d, 0x9c, 0xa3, 0x10, 0x44, 0xb6, 0x8c, 0xa9, 0x52, 0xd9, 0xf8,
	0x06, 0xeb, 0x85, 0x94, 0x12, 0xac, 0x6c, 0x42, 0x92, 0x1d, 0xdc, 0xc5, 0x24, 0x2b, 0x93, 0x09,
	0x06, 0x9f, 0x5e, 0xf6, 0xd2, 0xd8, 0xcd, 0x3f, 0xf3, 0x0d, 0x1f, 0x3f, 0x00, 0xee, 0x38, 0x3e,
	0x7c, 0x93, 0x63, 0x57, 0x11, 0x5c, 0xbf, 0xec, 0x38, 0xbe, 0x92, 0x9b, 0x9f, 0x26, 0x8b, 0x0b,
	0x17, 0xb7, 0x70, 0xae, 0x7b, 0xee, 0xa5, 0x28, 0x45, 0x7d, 0x6c, 0xce, 0xda, 0x90, 0x8a, 0x3b,
	0x38, 0xfc, 0x58, 0xcd, 0x46, 0x42, 0x29, 0xea, 0x53, 0x23, 0xda, 0x18, 0x0b, 0x09, 0x99, 0x41,
	0xfb, 0x69, 0x58, 0xe6, 0xe9, 0x90, 0xb2, 0xba, 0x80, 0xc3, 0xca, 0xda, 0x2e, 0xea, 0x06, 0x4e,
	0x8c, 0x34, 0xdb, 0xa5, 0x9f, 0xba, 0xd5, 0xfe, 0x62, 0x65, 0xe0, 0xe8, 0x9d, 0xef, 0x2e, 0x19,
	0xef, 0x21, 0x5f, 0x59, 0xbb, 0x8d, 0xbb, 0x7f, 0x62, 0x88, 0xcb, 0x67, 0xaf, 0x8f, 0x08, 0x12,
	0x45, 0x04, 0x02, 0x22, 0x02, 0x82, 0x44, 0x1e, 0x51, 0x97, 0x90, 0xc5, 0x87, 0x34, 0x21, 0x91,
	0xca, 0x3f, 0xae, 0xbe, 0xb6, 0x01, 0xdf, 0x7c, 0xd5, 0x21, 0x0b, 0x8d, 0x1f, 0xff, 0x02, 0x00,
	0x00, 0xff, 0xff, 0xc6, 0x2b, 0x25, 0x96, 0xff, 0x00, 0x00, 0x00,
}
